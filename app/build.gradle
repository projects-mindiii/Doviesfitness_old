apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'
apply from: '../constants.gradle'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'

android {

    signingConfigs {
        config {
            storeFile file('/Users/ios-asr110-12/Documents/Dovies.jks')
            storePassword '0123456789'
            keyAlias = 'android'
            keyPassword '0123456789'
        }
    }
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.doviesfitness"
        minSdkVersion 21
        targetSdkVersion 30
        /*live*/
        versionCode 38
        versionName "1.27"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        signingConfig signingConfigs.config
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
    }
    buildFeatures {

        dataBinding true

    }
    buildTypes {
        debug {
            debuggable true
            //for dev only
            applicationIdSuffix ".debug"
            resValue("string", "my_app_name", "DoviesWorkout")
            minifyEnabled false
            //dev url
            buildConfigField("String","BASE_URL","\"https://dev.doviesfitness.com/\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
        }

        release {
            debuggable true
            minifyEnabled false
            resValue("string", "my_app_name", "DoviesWorkout")
            buildConfigField("String","BASE_URL","\"https://www.doviesfitness.com/\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*It is used for the Parslable*/
    androidExtensions {
        experimental = true
    }
    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors india release builds,
            // but continue the build even when errors are found:
            abortOnError false
            disable 'GoogleAppIndexingWarning','MissingTranslation','IconDensities'
        }
    }

    flavorDimensions "decoderExtensions"

    productFlavors {
        noDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "false"
        }
        withDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "true"
        }
    }

/*
    productFlavors {
        noDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "false"
        }
        withDecoderExtensions {
            dimension "decoderExtensions"
            buildConfigField "boolean", "USE_DECODER_EXTENSIONS", "true"
        }
    }
*/

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //  implementation 'com.google.android.gms:play-services-cast:19.0.0'
    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    testImplementation 'junit:junit:4.12'
    implementation 'com.google.android.material:material:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    // circular image

    implementation 'de.hdodenhof:circleimageview:3.0.1'
    //facebook
    // implementation 'com.facebook.android:facebook-login:5.11.0'
    implementation 'com.facebook.android:facebook-android-sdk:8.2.0'

    //Video Player
    //Rounded corner
    implementation 'com.makeramen:roundedimageview:2.3.0'

    implementation 'org.greenrobot:eventbus:3.0.0'
    //  implementation 'com.soundcloud.android:android-crop:1.0.1@aar'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
    implementation 'com.r0adkll:slidableactivity:2.0.6'
    implementation 'com.github.khirr:Android-Foreground-Detection:1.0.1'
    implementation 'com.github.iamBedant:OutlineTextView:1.0.5'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.ramesh.mypicker:pickerview:1.1'
    implementation 'com.github.yalantis:ucrop:2.2.3'

    //implementation 'at.favre.lib:dali:0.3.5'

    //noinspection GradleDependency
    implementation 'com.google.firebase:firebase-core:18.0.2'
//noinspection GradleDependency
    implementation 'com.google.firebase:firebase-messaging:17.6.0'

    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'
    implementation 'android.arch.work:work-runtime:1.0.1'

    //  implementation project(':ucrop')
//    implementation('com.crashlytics.sdk.android:crashlytics:17.2.2@aar') {
//        transitive = true;
//    }
    api 'com.otaliastudios:cameraview:2.4.0'
    // implementation 'com.github.todou:appbarspring:1.0.6'

    // blur view
    implementation 'com.eightbitlab:blurview:1.6.3'

    // service calling
    implementation 'android.arch.work:work-runtime:1.0.1'

    /////////billing library
    implementation 'com.android.billingclient:billing:4.0.0'
    implementation 'com.github.woxingxiao:BounceScrollView:1.5-androidx'
    implementation("com.marcinmoskala.activitystarter:activitystarter-kotlin:1.11-beta") {
        transitive = false
    }
    implementation project(':appbarspring')
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    implementation 'com.eightbitlab:blurview:1.6.3'
    implementation libs.appcompatV7
    implementation libs.design
    ////////room
    implementation "android.arch.persistence.room:runtime:2.2.3"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    testImplementation "android.arch.persistence.room:testing:2.2.3"
    implementation "androidx.room:room-rxjava2:2.2.3"
    ///exoplayer demo
    // implementation "com.google.guava:guava: + 27.1-android"
    //   implementation "com.google.guava:guava:20.0"
    // compileOnly 'org.checkerframework:checker-qual:3.3.0'
    implementation project(':core')
    implementation project(':common')
    api project(modulePrefix + 'extractor')

    implementation project(':dash')
    implementation project(':hls')
    implementation project(':smoothstreaming')
    implementation project(':ui')
    implementation project(':cronet')
    implementation project(':ima')

    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
    implementation 'androidx.annotation:annotation:' + androidxAnnotationVersion
    implementation 'androidx.appcompat:appcompat:' + androidxAppCompatVersion
    implementation 'androidx.multidex:multidex:' + androidxMultidexVersion
    implementation 'com.google.android.material:material:1.2.1'
    implementation ('com.google.guava:guava:' + guavaVersion) {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'org.checkerframework', module: 'checker-compat-qual'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
        exclude group: 'org.codehaus.mojo', module: 'animal-sniffer-annotations'
    }

    //  implementation 'com.google.android.exoplayer:exoplayer:2.10.6'

    // implementation project(modulePrefix + 'library-core')
    //  implementation project(modulePrefix + 'library-dash')
    //  implementation project(modulePrefix + 'library-hls')
    //   implementation project(modulePrefix + 'library-smoothstreaming')
    // implementation project(modulePrefix + 'library-ui')
    // implementation project(modulePrefix + 'extension-cronet')
    //  implementation project(modulePrefix + 'extension-ima')
//    withDecoderExtensionsImplementation project(modulePrefix + 'extension-av1')
    //  withDecoderExtensionsImplementation project(modulePrefix + 'extension-ffmpeg')
    //  withDecoderExtensionsImplementation project(modulePrefix + 'extension-flac')
    //  withDecoderExtensionsImplementation project(modulePrefix + 'extension-opus')
    //  withDecoderExtensionsImplementation project(modulePrefix + 'extension-vp9')
    //  withDecoderExtensionsImplementation project(modulePrefix + 'extension-rtmp')

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.spotify.android:auth:1.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.8.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
   // implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.gms.strict-version-matcher-plugin'



