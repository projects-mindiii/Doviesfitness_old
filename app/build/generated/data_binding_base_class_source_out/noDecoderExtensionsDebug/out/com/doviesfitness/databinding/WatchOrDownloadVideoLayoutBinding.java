// Generated by data binding compiler. Do not edit!
package com.doviesfitness.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.doviesfitness.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class WatchOrDownloadVideoLayoutBinding extends ViewDataBinding {
  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView downloadIcon;

  @NonNull
  public final RelativeLayout downloadLayout;

  @NonNull
  public final TextView episode;

  @NonNull
  public final ProgressBar loader;

  @NonNull
  public final ImageView lockImg;

  @NonNull
  public final RelativeLayout mainLayout;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView playVideo;

  @NonNull
  public final RelativeLayout progressLayout;

  @NonNull
  public final TextView timeDuration;

  @NonNull
  public final RelativeLayout topLayout;

  @NonNull
  public final RoundedImageView videoThumb;

  @NonNull
  public final RelativeLayout videoThumbLayout;

  protected WatchOrDownloadVideoLayoutBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView description, ImageView downloadIcon,
      RelativeLayout downloadLayout, TextView episode, ProgressBar loader, ImageView lockImg,
      RelativeLayout mainLayout, TextView name, ImageView playVideo, RelativeLayout progressLayout,
      TextView timeDuration, RelativeLayout topLayout, RoundedImageView videoThumb,
      RelativeLayout videoThumbLayout) {
    super(_bindingComponent, _root, _localFieldCount);
    this.description = description;
    this.downloadIcon = downloadIcon;
    this.downloadLayout = downloadLayout;
    this.episode = episode;
    this.loader = loader;
    this.lockImg = lockImg;
    this.mainLayout = mainLayout;
    this.name = name;
    this.playVideo = playVideo;
    this.progressLayout = progressLayout;
    this.timeDuration = timeDuration;
    this.topLayout = topLayout;
    this.videoThumb = videoThumb;
    this.videoThumbLayout = videoThumbLayout;
  }

  @NonNull
  public static WatchOrDownloadVideoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.watch_or_download_video_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static WatchOrDownloadVideoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<WatchOrDownloadVideoLayoutBinding>inflateInternal(inflater, R.layout.watch_or_download_video_layout, root, attachToRoot, component);
  }

  @NonNull
  public static WatchOrDownloadVideoLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.watch_or_download_video_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static WatchOrDownloadVideoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<WatchOrDownloadVideoLayoutBinding>inflateInternal(inflater, R.layout.watch_or_download_video_layout, null, false, component);
  }

  public static WatchOrDownloadVideoLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static WatchOrDownloadVideoLayoutBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (WatchOrDownloadVideoLayoutBinding)bind(component, view, R.layout.watch_or_download_video_layout);
  }
}
